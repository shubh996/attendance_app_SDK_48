{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LinearGradient } from 'expo-linear-gradient';\nvar SwipeGradientView = function (_React$Component) {\n  _inherits(SwipeGradientView, _React$Component);\n  var _super = _createSuper(SwipeGradientView);\n  function SwipeGradientView() {\n    _classCallCheck(this, SwipeGradientView);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SwipeGradientView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        style = _this$props.style,\n        children = _this$props.children,\n        colors = _this$props.colors,\n        start = _this$props.start,\n        end = _this$props.end,\n        locations = _this$props.locations;\n      if (colors) {\n        if (!children) {\n          return React.createElement(LinearGradient, {\n            colors: colors,\n            end: end,\n            locations: locations,\n            start: start,\n            style: style\n          });\n        }\n        return React.createElement(LinearGradient, {\n          colors: colors,\n          end: end,\n          locations: locations,\n          start: start,\n          style: style\n        }, children);\n      }\n      return React.createElement(View, {\n        style: style\n      }, children);\n    }\n  }]);\n  return SwipeGradientView;\n}(React.Component);\nexport default SwipeGradientView;\nexport var AnimatedGradient = Animated.createAnimatedComponent(SwipeGradientView);","map":{"version":3,"names":["React","Animated","View","LinearGradient","SwipeGradientView","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_this$props","props","style","children","colors","start","end","locations","createElement","Component","AnimatedGradient","createAnimatedComponent"],"sources":["/Users/shubh/Documents/attendance_app/node_modules/react-native-expo-swipe-button/lib/module/SwipeGradient.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Animated, StyleProp, View, ViewStyle } from 'react-native';\r\nimport { LinearGradient, LinearGradientProps } from 'expo-linear-gradient';\r\n\r\ninterface SwipeGradientProps extends Omit<LinearGradientProps, 'colors'> {\r\n  style: StyleProp<ViewStyle>;\r\n  children?: React.ReactNode;\r\n  colors?: string[];\r\n}\r\n\r\nclass SwipeGradientView extends React.Component<SwipeGradientProps> {\r\n  render() {\r\n    const { style, children, colors, start, end, locations } = this.props;\r\n    if (colors) {\r\n      if (!children) {\r\n        return (\r\n          <LinearGradient\r\n            colors={colors}\r\n            end={end}\r\n            locations={locations}\r\n            start={start}\r\n            style={style}\r\n          />\r\n        );\r\n      }\r\n      return (\r\n        <LinearGradient\r\n          colors={colors}\r\n          end={end}\r\n          locations={locations}\r\n          start={start}\r\n          style={style}\r\n        >\r\n          {children}\r\n        </LinearGradient>\r\n      );\r\n    }\r\n    return <View style={style}>{children}</View>;\r\n  }\r\n}\r\n\r\nexport default SwipeGradientView;\r\n\r\nexport const AnimatedGradient =\r\n  Animated.createAnimatedComponent(SwipeGradientView);\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAEA,SAASC,cAAT,QAAoD,sBAApD;AAAA,IAQMC,iBAAN,aAAAC,gBAAA;EAAAC,SAAA,CAAAF,iBAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;EAAA,SAAAA,kBAAA;IAAAK,eAAA,OAAAL,iBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,iBAAA;IAAAS,GAAA;IAAAC,KAAA,EACE,SAAAC,OAAA,EAAS;MACP,IAAAC,WAAA,GAA2D,KAAKC,KAAhE;QAAQC,KAAF,GAAAF,WAAA,CAAEE,KAAF;QAASC,QAAT,GAAAH,WAAA,CAASG,QAAT;QAAmBC,MAAnB,GAAAJ,WAAA,CAAmBI,MAAnB;QAA2BC,KAA3B,GAAAL,WAAA,CAA2BK,KAA3B;QAAkCC,GAAlC,GAAAN,WAAA,CAAkCM,GAAlC;QAAuCC,SAAA,GAAAP,WAAA,CAAAO,SAAA;MAC7C,IAAIH,MAAJ,EAAY;QACV,IAAI,CAACD,QAAL,EAAe;UACb,OACEnB,KAAA,CAAAwB,aAAA,CAACrB,cAAD;YACEiB,MAAM,EAAEA,MADV;YAEEE,GAAG,EAAEA,GAFP;YAGEC,SAAS,EAAEA,SAHb;YAIEF,KAAK,EAAEA,KAJT;YAKEH,KAAK,EAAEA;UALT,EADF;QASD;QACD,OACElB,KAAA,CAAAwB,aAAA,CAACrB,cAAD;UACEiB,MAAM,EAAEA,MADV;UAEEE,GAAG,EAAEA,GAFP;UAGEC,SAAS,EAAEA,SAHb;UAIEF,KAAK,EAAEA,KAJT;UAKEH,KAAK,EAAEA;QALT,GAOGC,QAPH,CADF;MAWD;MACD,OAAOnB,KAAA,CAAAwB,aAAA,CAACtB,IAAD;QAAMgB,KAAK,EAAEA;MAAb,GAAqBC,QAArB,CAAP;IACD;EAAA;EAAA,OAAAf,iBAAA;AAAA,EA5B6BJ,KAAK,CAACyB,SAAtC;AA+BA,eAAerB,iBAAf;AAEA,OAAO,IAAMsB,gBAAgB,GAC3BzB,QAAQ,CAAC0B,uBAAT,CAAiCvB,iBAAjC,CADK"},"metadata":{},"sourceType":"module","externalDependencies":[]}