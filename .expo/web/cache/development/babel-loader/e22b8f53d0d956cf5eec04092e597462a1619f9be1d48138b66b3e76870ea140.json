{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { Platform } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nexport default {\n  get name() {\n    return 'ExpoDocumentPicker';\n  },\n  getDocumentAsync: function () {\n    var _getDocumentAsync = _asyncToGenerator(function* (_ref) {\n      var _ref$type = _ref.type,\n        type = _ref$type === void 0 ? '*/*' : _ref$type,\n        _ref$multiple = _ref.multiple,\n        multiple = _ref$multiple === void 0 ? false : _ref$multiple;\n      if (!Platform.isDOMAvailable) {\n        return {\n          type: 'cancel'\n        };\n      }\n      var input = document.createElement('input');\n      input.style.display = 'none';\n      input.setAttribute('type', 'file');\n      input.setAttribute('accept', Array.isArray(type) ? type.join(',') : type);\n      input.setAttribute('id', uuidv4());\n      if (multiple) {\n        input.setAttribute('multiple', 'multiple');\n      }\n      document.body.appendChild(input);\n      return new Promise(function (resolve, reject) {\n        input.addEventListener('change', function () {\n          if (input.files) {\n            var targetFile = input.files[0];\n            var mimeType = targetFile.type;\n            var reader = new FileReader();\n            reader.onerror = function () {\n              reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n            };\n            reader.onload = function (_ref2) {\n              var target = _ref2.target;\n              var uri = target.result;\n              resolve({\n                type: 'success',\n                uri: uri,\n                mimeType: mimeType,\n                name: targetFile.name,\n                file: targetFile,\n                lastModified: targetFile.lastModified,\n                size: targetFile.size,\n                output: input.files\n              });\n            };\n            reader.readAsDataURL(targetFile);\n          } else {\n            resolve({\n              type: 'cancel'\n            });\n          }\n          document.body.removeChild(input);\n        });\n        var event = new MouseEvent('click');\n        input.dispatchEvent(event);\n      });\n    });\n    function getDocumentAsync(_x) {\n      return _getDocumentAsync.apply(this, arguments);\n    }\n    return getDocumentAsync;\n  }()\n};","map":{"version":3,"names":["Platform","v4","uuidv4","name","getDocumentAsync","_getDocumentAsync","_asyncToGenerator","_ref","_ref$type","type","_ref$multiple","multiple","isDOMAvailable","input","document","createElement","style","display","setAttribute","Array","isArray","join","body","appendChild","Promise","resolve","reject","addEventListener","files","targetFile","mimeType","reader","FileReader","onerror","Error","onload","_ref2","target","uri","result","file","lastModified","size","output","readAsDataURL","removeChild","event","MouseEvent","dispatchEvent","_x","apply","arguments"],"sources":["/Users/shubh/Documents/attendance_app/node_modules/expo-document-picker/src/ExpoDocumentPicker.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { DocumentPickerOptions, DocumentResult } from './types';\n\nexport default {\n  get name(): string {\n    return 'ExpoDocumentPicker';\n  },\n\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false,\n  }: DocumentPickerOptions): Promise<DocumentResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { type: 'cancel' };\n    }\n\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', Array.isArray(type) ? type.join(',') : type);\n    input.setAttribute('id', uuidv4());\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple');\n    }\n\n    document.body.appendChild(input);\n\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', () => {\n        if (input.files) {\n          const targetFile = input.files[0];\n          const mimeType = targetFile.type;\n          const reader = new FileReader();\n          reader.onerror = () => {\n            reject(new Error(`Failed to read the selected media because the operation failed.`));\n          };\n          reader.onload = ({ target }) => {\n            const uri = (target as any).result;\n            resolve({\n              type: 'success',\n              uri,\n              mimeType,\n              name: targetFile.name,\n              file: targetFile,\n              lastModified: targetFile.lastModified,\n              size: targetFile.size,\n              output: input.files,\n            });\n          };\n          // Read in the image file as a binary string.\n          reader.readAsDataURL(targetFile);\n        } else {\n          resolve({ type: 'cancel' });\n        }\n\n        document.body.removeChild(input);\n      });\n\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  },\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAInC,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,oBAAoB;EAC7B,CAAC;EAEKC,gBAAgB;IAAA,IAAAC,iBAAA,GAAAC,iBAAA,YAAAC,IAAA,EAGE;MAAA,IAAAC,SAAA,GAAAD,IAAA,CAFtBE,IAAI;QAAJA,IAAI,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;QAAAE,aAAA,GAAAH,IAAA,CACZI,QAAQ;QAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;MAGhB,IAAI,CAACV,QAAQ,CAACY,cAAc,EAAE;QAC5B,OAAO;UAAEH,IAAI,EAAE;QAAQ,CAAE;;MAG3B,IAAMI,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;MAC7CF,KAAK,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;MAC5BJ,KAAK,CAACK,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;MAClCL,KAAK,CAACK,YAAY,CAAC,QAAQ,EAAEC,KAAK,CAACC,OAAO,CAACX,IAAI,CAAC,GAAGA,IAAI,CAACY,IAAI,CAAC,GAAG,CAAC,GAAGZ,IAAI,CAAC;MACzEI,KAAK,CAACK,YAAY,CAAC,IAAI,EAAEhB,MAAM,EAAE,CAAC;MAClC,IAAIS,QAAQ,EAAE;QACZE,KAAK,CAACK,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC;;MAG5CJ,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,KAAK,CAAC;MAEhC,OAAO,IAAIW,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAI;QACrCb,KAAK,CAACc,gBAAgB,CAAC,QAAQ,EAAE,YAAK;UACpC,IAAId,KAAK,CAACe,KAAK,EAAE;YACf,IAAMC,UAAU,GAAGhB,KAAK,CAACe,KAAK,CAAC,CAAC,CAAC;YACjC,IAAME,QAAQ,GAAGD,UAAU,CAACpB,IAAI;YAChC,IAAMsB,MAAM,GAAG,IAAIC,UAAU,EAAE;YAC/BD,MAAM,CAACE,OAAO,GAAG,YAAK;cACpBP,MAAM,CAAC,IAAIQ,KAAK,kEAAkE,CAAC,CAAC;YACtF,CAAC;YACDH,MAAM,CAACI,MAAM,GAAG,UAAAC,KAAA,EAAe;cAAA,IAAZC,MAAM,GAAAD,KAAA,CAANC,MAAM;cACvB,IAAMC,GAAG,GAAID,MAAc,CAACE,MAAM;cAClCd,OAAO,CAAC;gBACNhB,IAAI,EAAE,SAAS;gBACf6B,GAAG,EAAHA,GAAG;gBACHR,QAAQ,EAARA,QAAQ;gBACR3B,IAAI,EAAE0B,UAAU,CAAC1B,IAAI;gBACrBqC,IAAI,EAAEX,UAAU;gBAChBY,YAAY,EAAEZ,UAAU,CAACY,YAAY;gBACrCC,IAAI,EAAEb,UAAU,CAACa,IAAI;gBACrBC,MAAM,EAAE9B,KAAK,CAACe;eACf,CAAC;YACJ,CAAC;YAEDG,MAAM,CAACa,aAAa,CAACf,UAAU,CAAC;WACjC,MAAM;YACLJ,OAAO,CAAC;cAAEhB,IAAI,EAAE;YAAQ,CAAE,CAAC;;UAG7BK,QAAQ,CAACQ,IAAI,CAACuB,WAAW,CAAChC,KAAK,CAAC;QAClC,CAAC,CAAC;QAEF,IAAMiC,KAAK,GAAG,IAAIC,UAAU,CAAC,OAAO,CAAC;QACrClC,KAAK,CAACmC,aAAa,CAACF,KAAK,CAAC;MAC5B,CAAC,CAAC;IACJ,CAAC;IAAA,SAAA1C,iBAAA6C,EAAA;MAAA,OAAA5C,iBAAA,CAAA6C,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAA/C,gBAAA;EAAA;CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}