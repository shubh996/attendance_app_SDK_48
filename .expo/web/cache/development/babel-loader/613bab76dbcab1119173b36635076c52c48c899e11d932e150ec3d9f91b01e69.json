{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var SwipeButtonCircle = function SwipeButtonCircle(_ref) {\n  var Icon = _ref.Icon,\n    opacity = _ref.opacity,\n    panHandlers = _ref.panHandlers,\n    translateX = _ref.translateX,\n    circleSize = _ref.circleSize,\n    borderRadius = _ref.borderRadius,\n    circleBackgroundColor = _ref.circleBackgroundColor,\n    iconContainerStyle = _ref.iconContainerStyle;\n  return React.createElement(Animated.View, _extends({\n    testID: \"Button\"\n  }, panHandlers, {\n    style: [styles.iconContainer, iconContainerStyle, {\n      opacity: opacity,\n      width: circleSize,\n      height: circleSize,\n      borderRadius: borderRadius,\n      transform: [{\n        translateX: translateX\n      }]\n    }]\n  }), React.createElement(Animated.View, {\n    testID: \"IconContainer\",\n    style: [styles.innerIconContainer, {\n      backgroundColor: circleBackgroundColor,\n      width: circleSize,\n      height: circleSize,\n      borderRadius: borderRadius\n    }, {\n      opacity: opacity\n    }]\n  }, Icon));\n};\nvar styles = StyleSheet.create({\n  iconContainer: {\n    position: 'absolute',\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  innerIconContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","Animated","StyleSheet","SwipeButtonCircle","_ref","Icon","opacity","panHandlers","translateX","circleSize","borderRadius","circleBackgroundColor","iconContainerStyle","createElement","View","_extends","testID","style","styles","iconContainer","width","height","transform","innerIconContainer","backgroundColor","create","position","alignItems","justifyContent"],"sources":["/Users/shubh/Documents/attendance_app/node_modules/react-native-expo-swipe-button/lib/module/SwipeButtonCircle.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport {\r\n  GestureResponderHandlers,\r\n  Animated,\r\n  StyleSheet,\r\n  StyleProp,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nexport interface SwipeButtonCircleProps {\r\n  /**\r\n   * GestureHandlers for when swiping the button\r\n   */\r\n  panHandlers: GestureResponderHandlers;\r\n\r\n  /**\r\n   * Opacity of the element\r\n   */\r\n  opacity?: number;\r\n\r\n  /**\r\n   * Element that should be displayed inside the button\r\n   */\r\n  Icon: JSX.Element;\r\n\r\n  /**\r\n   * Determinates the value of the button\r\n   */\r\n  translateX: Animated.Value;\r\n\r\n  /**\r\n   * Background color for the circle\r\n   */\r\n  circleBackgroundColor?: string;\r\n\r\n  /**\r\n   * set border radius for the circle\r\n   */\r\n  borderRadius?: number;\r\n\r\n  /**\r\n   * set the size (width and height) of the circle\r\n   * @default 70\r\n   */\r\n  circleSize?: number;\r\n\r\n  /**\r\n   * Additional styling for the circle\r\n   */\r\n  iconContainerStyle?: StyleProp<ViewStyle>;\r\n}\r\n\r\nexport const SwipeButtonCircle: FC<SwipeButtonCircleProps> = ({\r\n  Icon,\r\n  opacity,\r\n  panHandlers,\r\n  translateX,\r\n  circleSize,\r\n  borderRadius,\r\n  circleBackgroundColor,\r\n  iconContainerStyle,\r\n}) => {\r\n  return (\r\n    <Animated.View\r\n      testID=\"Button\"\r\n      {...panHandlers}\r\n      style={[\r\n        styles.iconContainer,\r\n        iconContainerStyle,\r\n        {\r\n          opacity,\r\n          width: circleSize,\r\n          height: circleSize,\r\n          borderRadius,\r\n          transform: [{ translateX }],\r\n        },\r\n      ]}\r\n    >\r\n      <Animated.View\r\n        testID=\"IconContainer\"\r\n        style={[\r\n          styles.innerIconContainer,\r\n          {\r\n            backgroundColor: circleBackgroundColor,\r\n            width: circleSize,\r\n            height: circleSize,\r\n            borderRadius,\r\n          },\r\n          { opacity },\r\n        ]}\r\n      >\r\n        {Icon}\r\n      </Animated.View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  iconContainer: {\r\n    position: 'absolute',\r\n    backgroundColor: 'black',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  innerIconContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAoDA,OAAO,IAAMC,iBAA6C,GAAG,SAAhDA,iBAA6CA,CAAGC,IAAA,EASvD;EAAA,IARJC,IAD4D,GASxDD,IAAA,CARJC,IAD4D;IAE5DC,OAF4D,GASxDF,IAAA,CAPJE,OAF4D;IAG5DC,WAH4D,GASxDH,IAAA,CANJG,WAH4D;IAI5DC,UAJ4D,GASxDJ,IAAA,CALJI,UAJ4D;IAK5DC,UAL4D,GASxDL,IAAA,CAJJK,UAL4D;IAM5DC,YAN4D,GASxDN,IAAA,CAHJM,YAN4D;IAO5DC,qBAP4D,GASxDP,IAAA,CAFJO,qBAP4D;IAQ5DC,kBAAA,GACIR,IAAA,CADJQ,kBAAA;EAEA,OACEZ,KAAA,CAAAa,aAAA,CAACZ,QAAD,CAAUa,IAAV,EAAAC,QAAA;IACEC,MAAM,EAAC;EADT,GAEMT,WAFN;IAGEU,KAAK,EAAE,CACLC,MAAM,CAACC,aADF,EAELP,kBAFK,EAGL;MACEN,OADF,EACEA,OADF;MAEEc,KAAK,EAAEX,UAFT;MAGEY,MAAM,EAAEZ,UAHV;MAIEC,YAJF,EAIEA,YAJF;MAKEY,SAAS,EAAE,CAAC;QAAEd,UAAA,EAAAA;MAAF,CAAD;IALb,CAHK;EAHT,IAeER,KAAA,CAAAa,aAAA,CAACZ,QAAD,CAAUa,IAAV;IACEE,MAAM,EAAC,eADT;IAEEC,KAAK,EAAE,CACLC,MAAM,CAACK,kBADF,EAEL;MACEC,eAAe,EAAEb,qBADnB;MAEES,KAAK,EAAEX,UAFT;MAGEY,MAAM,EAAEZ,UAHV;MAIEC,YAAA,EAAAA;IAJF,CAFK,EAQL;MAAEJ,OAAA,EAAAA;IAAF,CARK;EAFT,GAaGD,IAbH,CAfF,CADF;AAiCD,CA3CM;AA6CP,IAAMa,MAAM,GAAGhB,UAAU,CAACuB,MAAX,CAAkB;EAC/BN,aAAa,EAAE;IACbO,QAAQ,EAAE,UADG;IAEbF,eAAe,EAAE,OAFJ;IAGbG,UAAU,EAAE,QAHC;IAIbC,cAAc,EAAE;EAJH,CADgB;EAO/BL,kBAAkB,EAAE;IAClBI,UAAU,EAAE,QADM;IAElBC,cAAc,EAAE;EAFE;AAPW,CAAlB,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}