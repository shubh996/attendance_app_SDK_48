{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { DEFAULT_HEIGHT } from \"./constants\";\nvar SwipeButtonUnderlayText = function SwipeButtonUnderlayText(_ref) {\n  var _ref$underlayTitle = _ref.underlayTitle,\n    underlayTitle = _ref$underlayTitle === void 0 ? '' : _ref$underlayTitle,\n    underlayTitleExtraTextProps = _ref.underlayTitleExtraTextProps,\n    underlayTitleStyle = _ref.underlayTitleStyle,\n    underlayTitleContainerExtraViewProps = _ref.underlayTitleContainerExtraViewProps,\n    underlayTitleContainerStyle = _ref.underlayTitleContainerStyle,\n    underlayTitleElement = _ref.underlayTitleElement,\n    animation = _ref.animation,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? DEFAULT_HEIGHT : _ref$height;\n  return underlayTitleElement || React.createElement(Animated.View, _extends({\n    testID: \"TitleContainer\",\n    style: [styles.titleContainer, {\n      height: height\n    }, underlayTitleContainerStyle, {\n      opacity: animation === null || animation === void 0 ? void 0 : animation.interpolate({\n        inputRange: [0, 225, 300],\n        outputRange: [0, 0, 1]\n      })\n    }]\n  }, underlayTitleContainerExtraViewProps), React.createElement(Text, _extends({\n    numberOfLines: 2,\n    allowFontScaling: false,\n    style: [styles.title, underlayTitleStyle],\n    testID: \"Title\"\n  }, underlayTitleExtraTextProps), underlayTitle));\n};\nexport default SwipeButtonUnderlayText;\nvar styles = StyleSheet.create({\n  titleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 16,\n    maxWidth: '50%',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Animated","Text","DEFAULT_HEIGHT","SwipeButtonUnderlayText","_ref","_ref$underlayTitle","underlayTitle","underlayTitleExtraTextProps","underlayTitleStyle","underlayTitleContainerExtraViewProps","underlayTitleContainerStyle","underlayTitleElement","animation","_ref$height","height","createElement","View","_extends","testID","style","styles","titleContainer","opacity","interpolate","inputRange","outputRange","numberOfLines","allowFontScaling","title","create","justifyContent","alignItems","color","fontSize","maxWidth","textAlign"],"sources":["/Users/shubh/Documents/attendance_app/node_modules/react-native-expo-swipe-button/lib/module/SwipeButtonUnderlayText.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport {\r\n  TextProps,\r\n  StyleProp,\r\n  TextStyle,\r\n  ViewProps,\r\n  ViewStyle,\r\n  StyleSheet,\r\n  Animated,\r\n  Text,\r\n} from 'react-native';\r\nimport { DEFAULT_HEIGHT } from './constants';\r\n\r\nexport interface SwipeButtonUnderlayTextProps {\r\n  /**\r\n   * The text that will be displayed in the underlay container\r\n   */\r\n  underlayTitle?: string;\r\n\r\n  /**\r\n   * Additional props for the underlay title text\r\n   */\r\n  underlayTitleExtraTextProps?: TextProps;\r\n\r\n  /**\r\n   * Additional styling for the underlay title text\r\n   */\r\n  underlayTitleStyle?: StyleProp<TextStyle>;\r\n\r\n  /**\r\n   * Additional props for the underlay title container\r\n   */\r\n  underlayTitleContainerExtraViewProps?: ViewProps;\r\n\r\n  /**\r\n   * Additional styling for the underlay title container\r\n   */\r\n  underlayTitleContainerStyle?: StyleProp<ViewStyle>;\r\n\r\n  /**\r\n   * Height of the underlay title container\r\n   */\r\n  height?: number;\r\n\r\n  /**\r\n   * An JSX element you can define to replace the underlay title default component. Using this will omit the others title props\r\n   */\r\n  underlayTitleElement?: JSX.Element;\r\n}\r\n\r\ninterface PrivateProps {\r\n  animation?: Animated.Value;\r\n}\r\n\r\nconst SwipeButtonUnderlayText: FC<\r\n  SwipeButtonUnderlayTextProps & PrivateProps\r\n> = ({\r\n  underlayTitle = '',\r\n  underlayTitleExtraTextProps,\r\n  underlayTitleStyle,\r\n  underlayTitleContainerExtraViewProps,\r\n  underlayTitleContainerStyle,\r\n  underlayTitleElement,\r\n  animation,\r\n  height = DEFAULT_HEIGHT,\r\n}) => {\r\n  return (\r\n    underlayTitleElement || (\r\n      <Animated.View\r\n        testID=\"TitleContainer\"\r\n        style={[\r\n          styles.titleContainer,\r\n          { height: height },\r\n          underlayTitleContainerStyle,\r\n          {\r\n            opacity: animation?.interpolate({\r\n              inputRange: [0, 225, 300],\r\n              outputRange: [0, 0, 1],\r\n            }),\r\n          },\r\n        ]}\r\n        {...underlayTitleContainerExtraViewProps}\r\n      >\r\n        <Text\r\n          numberOfLines={2}\r\n          allowFontScaling={false}\r\n          style={[styles.title, underlayTitleStyle]}\r\n          testID=\"Title\"\r\n          {...underlayTitleExtraTextProps}\r\n        >\r\n          {underlayTitle}\r\n        </Text>\r\n      </Animated.View>\r\n    )\r\n  );\r\n};\r\n\r\nexport default SwipeButtonUnderlayText;\r\n\r\nconst styles = StyleSheet.create({\r\n  titleContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    color: 'black',\r\n    fontSize: 16,\r\n    maxWidth: '50%',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAWA,SAASC,cAAT;AA2CA,IAAMC,uBAEL,GAAG,SAFEA,uBAELA,CAAGC,IAAA,EASE;EAAA,IAAAC,kBAAA,GAAAD,IAAA,CARJE,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,EADb,GAAAA,kBAAA;IAEHE,2BAFG,GASCH,IAAA,CAPJG,2BAFG;IAGHC,kBAHG,GASCJ,IAAA,CANJI,kBAHG;IAIHC,oCAJG,GASCL,IAAA,CALJK,oCAJG;IAKHC,2BALG,GASCN,IAAA,CAJJM,2BALG;IAMHC,oBANG,GASCP,IAAA,CAHJO,oBANG;IAOHC,SAPG,GASCR,IAAA,CAFJQ,SAPG;IAAAC,WAAA,GASCT,IAAA,CADJU,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAGX,cAAA,GAAAW,WAAA;EAET,OACEF,oBAAoB,IAClBb,KAAA,CAAAiB,aAAA,CAACf,QAAD,CAAUgB,IAAV,EAAAC,QAAA;IACEC,MAAM,EAAC,gBADT;IAEEC,KAAK,EAAE,CACLC,MAAM,CAACC,cADF,EAEL;MAAEP,MAAM,EAAEA;IAAV,CAFK,EAGLJ,2BAHK,EAIL;MACEY,OAAO,EAAEV,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEW,WAAX,CAAuB;QAC9BC,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CADkB;QAE9BC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;MAFiB,CAAvB;IADX,CAJK;EAFT,GAaMhB,oCAbN,GAeEX,KAAA,CAAAiB,aAAA,CAACd,IAAD,EAAAgB,QAAA;IACES,aAAa,EAAE,CADjB;IAEEC,gBAAgB,EAAE,KAFpB;IAGER,KAAK,EAAE,CAACC,MAAM,CAACQ,KAAR,EAAepB,kBAAf,CAHT;IAIEU,MAAM,EAAC;EAJT,GAKMX,2BALN,GAOGD,aAPH,CAfF,CAFJ;AA6BD,CAzCD;AA2CA,eAAeH,uBAAf;AAEA,IAAMiB,MAAM,GAAGrB,UAAU,CAAC8B,MAAX,CAAkB;EAC/BR,cAAc,EAAE;IACdS,cAAc,EAAE,QADF;IAEdC,UAAU,EAAE;EAFE,CADe;EAK/BH,KAAK,EAAE;IACLI,KAAK,EAAE,OADF;IAELC,QAAQ,EAAE,EAFL;IAGLC,QAAQ,EAAE,KAHL;IAILC,SAAS,EAAE;EAJN;AALwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}