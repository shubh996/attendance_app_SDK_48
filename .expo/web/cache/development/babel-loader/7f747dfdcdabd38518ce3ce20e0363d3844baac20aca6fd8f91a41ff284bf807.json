{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { EventEmitter, CodedError, UnavailabilityError } from 'expo-modules-core';\nimport NotificationsHandlerModule from \"./NotificationsHandlerModule\";\nexport var NotificationTimeoutError = function (_CodedError) {\n  _inherits(NotificationTimeoutError, _CodedError);\n  var _super = _createSuper(NotificationTimeoutError);\n  function NotificationTimeoutError(notificationId, notification) {\n    var _this;\n    _classCallCheck(this, NotificationTimeoutError);\n    _this = _super.call(this, 'ERR_NOTIFICATION_TIMEOUT', \"Notification handling timed out for ID \" + notificationId + \".\");\n    _this.info = {\n      id: notificationId,\n      notification: notification\n    };\n    return _this;\n  }\n  return _createClass(NotificationTimeoutError);\n}(CodedError);\nvar notificationEmitter = new EventEmitter(NotificationsHandlerModule);\nvar handleNotificationEventName = 'onHandleNotification';\nvar handleNotificationTimeoutEventName = 'onHandleNotificationTimeout';\nvar handleSubscription = null;\nvar handleTimeoutSubscription = null;\nexport function setNotificationHandler(handler) {\n  if (handleSubscription) {\n    handleSubscription.remove();\n    handleSubscription = null;\n  }\n  if (handleTimeoutSubscription) {\n    handleTimeoutSubscription.remove();\n    handleTimeoutSubscription = null;\n  }\n  if (handler) {\n    handleSubscription = notificationEmitter.addListener(handleNotificationEventName, function () {\n      var _ref2 = _asyncToGenerator(function* (_ref) {\n        var id = _ref.id,\n          notification = _ref.notification;\n        if (!NotificationsHandlerModule.handleNotificationAsync) {\n          handler.handleError == null ? void 0 : handler.handleError(id, new UnavailabilityError('Notifications', 'handleNotificationAsync'));\n          return;\n        }\n        try {\n          var behavior = yield handler.handleNotification(notification);\n          yield NotificationsHandlerModule.handleNotificationAsync(id, behavior);\n          handler.handleSuccess == null ? void 0 : handler.handleSuccess(id);\n        } catch (error) {\n          handler.handleError == null ? void 0 : handler.handleError(id, error);\n        }\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    handleTimeoutSubscription = notificationEmitter.addListener(handleNotificationTimeoutEventName, function (_ref3) {\n      var id = _ref3.id,\n        notification = _ref3.notification;\n      return handler.handleError == null ? void 0 : handler.handleError(id, new NotificationTimeoutError(id, notification));\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","CodedError","UnavailabilityError","NotificationsHandlerModule","NotificationTimeoutError","_CodedError","_inherits","_super","_createSuper","notificationId","notification","_this","_classCallCheck","call","info","id","_createClass","notificationEmitter","handleNotificationEventName","handleNotificationTimeoutEventName","handleSubscription","handleTimeoutSubscription","setNotificationHandler","handler","remove","addListener","_ref2","_asyncToGenerator","_ref","handleNotificationAsync","handleError","behavior","handleNotification","handleSuccess","error","_x","apply","arguments","_ref3"],"sources":["/Users/shubh/Documents/attendance_app/node_modules/expo-notifications/src/NotificationsHandler.ts"],"sourcesContent":["import { EventEmitter, Subscription, CodedError, UnavailabilityError } from 'expo-modules-core';\n\nimport { Notification, NotificationBehavior } from './Notifications.types';\nimport NotificationsHandlerModule from './NotificationsHandlerModule';\n\nexport class NotificationTimeoutError extends CodedError {\n  info: { notification: Notification; id: string };\n  constructor(notificationId: string, notification: Notification) {\n    super('ERR_NOTIFICATION_TIMEOUT', `Notification handling timed out for ID ${notificationId}.`);\n    this.info = { id: notificationId, notification };\n  }\n}\n\nexport type NotificationHandlingError = NotificationTimeoutError | Error;\n\nexport interface NotificationHandler {\n  handleNotification: (notification: Notification) => Promise<NotificationBehavior>;\n  handleSuccess?: (notificationId: string) => void;\n  handleError?: (notificationId: string, error: NotificationHandlingError) => void;\n}\n\ntype HandleNotificationEvent = {\n  id: string;\n  notification: Notification;\n};\n\ntype HandleNotificationTimeoutEvent = HandleNotificationEvent;\n\n// Web uses SyntheticEventEmitter\nconst notificationEmitter = new EventEmitter(NotificationsHandlerModule);\n\nconst handleNotificationEventName = 'onHandleNotification';\nconst handleNotificationTimeoutEventName = 'onHandleNotificationTimeout';\n\nlet handleSubscription: Subscription | null = null;\nlet handleTimeoutSubscription: Subscription | null = null;\n\nexport function setNotificationHandler(handler: NotificationHandler | null): void {\n  if (handleSubscription) {\n    handleSubscription.remove();\n    handleSubscription = null;\n  }\n  if (handleTimeoutSubscription) {\n    handleTimeoutSubscription.remove();\n    handleTimeoutSubscription = null;\n  }\n\n  if (handler) {\n    handleSubscription = notificationEmitter.addListener<HandleNotificationEvent>(\n      handleNotificationEventName,\n      async ({ id, notification }) => {\n        if (!NotificationsHandlerModule.handleNotificationAsync) {\n          handler.handleError?.(\n            id,\n            new UnavailabilityError('Notifications', 'handleNotificationAsync')\n          );\n          return;\n        }\n\n        try {\n          const behavior = await handler.handleNotification(notification);\n          await NotificationsHandlerModule.handleNotificationAsync(id, behavior);\n          handler.handleSuccess?.(id);\n        } catch (error) {\n          handler.handleError?.(id, error);\n        }\n      }\n    );\n\n    handleTimeoutSubscription = notificationEmitter.addListener<HandleNotificationTimeoutEvent>(\n      handleNotificationTimeoutEventName,\n      ({ id, notification }) =>\n        handler.handleError?.(id, new NotificationTimeoutError(id, notification))\n    );\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,YAAY,EAAgBC,UAAU,EAAEC,mBAAmB,QAAQ,mBAAmB;AAG/F,OAAOC,0BAA0B;AAEjC,WAAaC,wBAAyB,aAAAC,WAAA;EAAAC,SAAA,CAAAF,wBAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,wBAAA;EAEpC,SAAAA,yBAAYK,cAAsB,EAAEC,YAA0B;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,wBAAA;IAC5DO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAM,0BAA0B,8CAA4CJ,cAAc;IAC1FE,KAAA,CAAKG,IAAI,GAAG;MAAEC,EAAE,EAAEN,cAAc;MAAEC,YAAY,EAAZA;IAAY,CAAE;IAAC,OAAAC,KAAA;EACnD;EAAC,OAAAK,YAAA,CAAAZ,wBAAA;AAAA,EAL2CH,UAAU;AAwBxD,IAAMgB,mBAAmB,GAAG,IAAIjB,YAAY,CAACG,0BAA0B,CAAC;AAExE,IAAMe,2BAA2B,GAAG,sBAAsB;AAC1D,IAAMC,kCAAkC,GAAG,6BAA6B;AAExE,IAAIC,kBAAkB,GAAwB,IAAI;AAClD,IAAIC,yBAAyB,GAAwB,IAAI;AAEzD,OAAM,SAAUC,sBAAsBA,CAACC,OAAmC;EACxE,IAAIH,kBAAkB,EAAE;IACtBA,kBAAkB,CAACI,MAAM,EAAE;IAC3BJ,kBAAkB,GAAG,IAAI;;EAE3B,IAAIC,yBAAyB,EAAE;IAC7BA,yBAAyB,CAACG,MAAM,EAAE;IAClCH,yBAAyB,GAAG,IAAI;;EAGlC,IAAIE,OAAO,EAAE;IACXH,kBAAkB,GAAGH,mBAAmB,CAACQ,WAAW,CAClDP,2BAA2B;MAAA,IAAAQ,KAAA,GAAAC,iBAAA,CAC3B,WAAAC,IAAA,EAA+B;QAAA,IAAtBb,EAAE,GAAAa,IAAA,CAAFb,EAAE;UAAEL,YAAY,GAAAkB,IAAA,CAAZlB,YAAY;QACvB,IAAI,CAACP,0BAA0B,CAAC0B,uBAAuB,EAAE;UACvDN,OAAO,CAACO,WAAW,oBAAnBP,OAAO,CAACO,WAAW,CACjBf,EAAE,EACF,IAAIb,mBAAmB,CAAC,eAAe,EAAE,yBAAyB,CAAC,CACpE;UACD;;QAGF,IAAI;UACF,IAAM6B,QAAQ,SAASR,OAAO,CAACS,kBAAkB,CAACtB,YAAY,CAAC;UAC/D,MAAMP,0BAA0B,CAAC0B,uBAAuB,CAACd,EAAE,EAAEgB,QAAQ,CAAC;UACtER,OAAO,CAACU,aAAa,oBAArBV,OAAO,CAACU,aAAa,CAAGlB,EAAE,CAAC;SAC5B,CAAC,OAAOmB,KAAK,EAAE;UACdX,OAAO,CAACO,WAAW,oBAAnBP,OAAO,CAACO,WAAW,CAAGf,EAAE,EAAEmB,KAAK,CAAC;;MAEpC,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAT,KAAA,CAAAU,KAAA,OAAAC,SAAA;MAAA;IAAA,IACF;IAEDhB,yBAAyB,GAAGJ,mBAAmB,CAACQ,WAAW,CACzDN,kCAAkC,EAClC,UAAAmB,KAAA;MAAA,IAAGvB,EAAE,GAAAuB,KAAA,CAAFvB,EAAE;QAAEL,YAAY,GAAA4B,KAAA,CAAZ5B,YAAY;MAAA,OACjBa,OAAO,CAACO,WAAW,oBAAnBP,OAAO,CAACO,WAAW,CAAGf,EAAE,EAAE,IAAIX,wBAAwB,CAACW,EAAE,EAAEL,YAAY,CAAC,CAAC;IAAA,EAC5E;;AAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}