{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { EventEmitter, UnavailabilityError } from 'expo-modules-core';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { v4 as uuidv4 } from 'uuid';\nimport ExponentFileSystem from \"./ExponentFileSystem\";\nimport { EncodingType, FileSystemSessionType, FileSystemUploadType } from \"./FileSystem.types\";\nif (!ExponentFileSystem) {\n  console.warn(\"No native ExponentFileSystem module found, are you sure the expo-file-system's module is linked properly?\");\n}\nvar _unused = new EventEmitter(ExponentFileSystem);\nexport { EncodingType, FileSystemSessionType, FileSystemUploadType };\nfunction normalizeEndingSlash(p) {\n  if (p != null) {\n    return p.replace(/\\/*$/, '') + '/';\n  }\n  return null;\n}\nexport var documentDirectory = normalizeEndingSlash(ExponentFileSystem.documentDirectory);\nexport var cacheDirectory = normalizeEndingSlash(ExponentFileSystem.cacheDirectory);\nvar bundledAssets = ExponentFileSystem.bundledAssets,\n  bundleDirectory = ExponentFileSystem.bundleDirectory;\nexport { bundledAssets, bundleDirectory };\nexport function getInfoAsync(_x) {\n  return _getInfoAsync.apply(this, arguments);\n}\nfunction _getInfoAsync() {\n  _getInfoAsync = _asyncToGenerator(function* (fileUri) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExponentFileSystem.getInfoAsync) {\n      throw new UnavailabilityError('expo-file-system', 'getInfoAsync');\n    }\n    return yield ExponentFileSystem.getInfoAsync(fileUri, options);\n  });\n  return _getInfoAsync.apply(this, arguments);\n}\nexport function readAsStringAsync(_x2, _x3) {\n  return _readAsStringAsync.apply(this, arguments);\n}\nfunction _readAsStringAsync() {\n  _readAsStringAsync = _asyncToGenerator(function* (fileUri, options) {\n    if (!ExponentFileSystem.readAsStringAsync) {\n      throw new UnavailabilityError('expo-file-system', 'readAsStringAsync');\n    }\n    return yield ExponentFileSystem.readAsStringAsync(fileUri, options || {});\n  });\n  return _readAsStringAsync.apply(this, arguments);\n}\nexport function getContentUriAsync(_x4) {\n  return _getContentUriAsync.apply(this, arguments);\n}\nfunction _getContentUriAsync() {\n  _getContentUriAsync = _asyncToGenerator(function* (fileUri) {\n    if (Platform.OS === 'android') {\n      if (!ExponentFileSystem.getContentUriAsync) {\n        throw new UnavailabilityError('expo-file-system', 'getContentUriAsync');\n      }\n      return yield ExponentFileSystem.getContentUriAsync(fileUri);\n    } else {\n      return new Promise(function (resolve, reject) {\n        resolve(fileUri);\n      });\n    }\n  });\n  return _getContentUriAsync.apply(this, arguments);\n}\nexport function writeAsStringAsync(_x5, _x6) {\n  return _writeAsStringAsync.apply(this, arguments);\n}\nfunction _writeAsStringAsync() {\n  _writeAsStringAsync = _asyncToGenerator(function* (fileUri, contents) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!ExponentFileSystem.writeAsStringAsync) {\n      throw new UnavailabilityError('expo-file-system', 'writeAsStringAsync');\n    }\n    return yield ExponentFileSystem.writeAsStringAsync(fileUri, contents, options);\n  });\n  return _writeAsStringAsync.apply(this, arguments);\n}\nexport function deleteAsync(_x7) {\n  return _deleteAsync.apply(this, arguments);\n}\nfunction _deleteAsync() {\n  _deleteAsync = _asyncToGenerator(function* (fileUri) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExponentFileSystem.deleteAsync) {\n      throw new UnavailabilityError('expo-file-system', 'deleteAsync');\n    }\n    return yield ExponentFileSystem.deleteAsync(fileUri, options);\n  });\n  return _deleteAsync.apply(this, arguments);\n}\nexport function deleteLegacyDocumentDirectoryAndroid() {\n  return _deleteLegacyDocumentDirectoryAndroid.apply(this, arguments);\n}\nfunction _deleteLegacyDocumentDirectoryAndroid() {\n  _deleteLegacyDocumentDirectoryAndroid = _asyncToGenerator(function* () {\n    if (Platform.OS !== 'android' || documentDirectory == null) {\n      return;\n    }\n    var legacyDocumentDirectory = documentDirectory + \"ExperienceData/\";\n    return yield deleteAsync(legacyDocumentDirectory, {\n      idempotent: true\n    });\n  });\n  return _deleteLegacyDocumentDirectoryAndroid.apply(this, arguments);\n}\nexport function moveAsync(_x8) {\n  return _moveAsync.apply(this, arguments);\n}\nfunction _moveAsync() {\n  _moveAsync = _asyncToGenerator(function* (options) {\n    if (!ExponentFileSystem.moveAsync) {\n      throw new UnavailabilityError('expo-file-system', 'moveAsync');\n    }\n    return yield ExponentFileSystem.moveAsync(options);\n  });\n  return _moveAsync.apply(this, arguments);\n}\nexport function copyAsync(_x9) {\n  return _copyAsync.apply(this, arguments);\n}\nfunction _copyAsync() {\n  _copyAsync = _asyncToGenerator(function* (options) {\n    if (!ExponentFileSystem.copyAsync) {\n      throw new UnavailabilityError('expo-file-system', 'copyAsync');\n    }\n    return yield ExponentFileSystem.copyAsync(options);\n  });\n  return _copyAsync.apply(this, arguments);\n}\nexport function makeDirectoryAsync(_x10) {\n  return _makeDirectoryAsync.apply(this, arguments);\n}\nfunction _makeDirectoryAsync() {\n  _makeDirectoryAsync = _asyncToGenerator(function* (fileUri) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExponentFileSystem.makeDirectoryAsync) {\n      throw new UnavailabilityError('expo-file-system', 'makeDirectoryAsync');\n    }\n    return yield ExponentFileSystem.makeDirectoryAsync(fileUri, options);\n  });\n  return _makeDirectoryAsync.apply(this, arguments);\n}\nexport function readDirectoryAsync(_x11) {\n  return _readDirectoryAsync.apply(this, arguments);\n}\nfunction _readDirectoryAsync() {\n  _readDirectoryAsync = _asyncToGenerator(function* (fileUri) {\n    if (!ExponentFileSystem.readDirectoryAsync) {\n      throw new UnavailabilityError('expo-file-system', 'readDirectoryAsync');\n    }\n    return yield ExponentFileSystem.readDirectoryAsync(fileUri, {});\n  });\n  return _readDirectoryAsync.apply(this, arguments);\n}\nexport function getFreeDiskStorageAsync() {\n  return _getFreeDiskStorageAsync.apply(this, arguments);\n}\nfunction _getFreeDiskStorageAsync() {\n  _getFreeDiskStorageAsync = _asyncToGenerator(function* () {\n    if (!ExponentFileSystem.getFreeDiskStorageAsync) {\n      throw new UnavailabilityError('expo-file-system', 'getFreeDiskStorageAsync');\n    }\n    return yield ExponentFileSystem.getFreeDiskStorageAsync();\n  });\n  return _getFreeDiskStorageAsync.apply(this, arguments);\n}\nexport function getTotalDiskCapacityAsync() {\n  return _getTotalDiskCapacityAsync.apply(this, arguments);\n}\nfunction _getTotalDiskCapacityAsync() {\n  _getTotalDiskCapacityAsync = _asyncToGenerator(function* () {\n    if (!ExponentFileSystem.getTotalDiskCapacityAsync) {\n      throw new UnavailabilityError('expo-file-system', 'getTotalDiskCapacityAsync');\n    }\n    return yield ExponentFileSystem.getTotalDiskCapacityAsync();\n  });\n  return _getTotalDiskCapacityAsync.apply(this, arguments);\n}\nexport function downloadAsync(_x12, _x13) {\n  return _downloadAsync.apply(this, arguments);\n}\nfunction _downloadAsync() {\n  _downloadAsync = _asyncToGenerator(function* (uri, fileUri) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!ExponentFileSystem.downloadAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadAsync');\n    }\n    return yield ExponentFileSystem.downloadAsync(uri, fileUri, _objectSpread({\n      sessionType: FileSystemSessionType.BACKGROUND\n    }, options));\n  });\n  return _downloadAsync.apply(this, arguments);\n}\nexport function uploadAsync(_x14, _x15) {\n  return _uploadAsync.apply(this, arguments);\n}\nfunction _uploadAsync() {\n  _uploadAsync = _asyncToGenerator(function* (url, fileUri) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!ExponentFileSystem.uploadAsync) {\n      throw new UnavailabilityError('expo-file-system', 'uploadAsync');\n    }\n    return yield ExponentFileSystem.uploadAsync(url, fileUri, _objectSpread(_objectSpread({\n      sessionType: FileSystemSessionType.BACKGROUND,\n      uploadType: FileSystemUploadType.BINARY_CONTENT\n    }, options), {}, {\n      httpMethod: (options.httpMethod || 'POST').toUpperCase()\n    }));\n  });\n  return _uploadAsync.apply(this, arguments);\n}\nexport function createDownloadResumable(uri, fileUri, options, callback, resumeData) {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\nexport function createUploadTask(url, fileUri, options, callback) {\n  return new UploadTask(url, fileUri, options, callback);\n}\nexport var FileSystemCancellableNetworkTask = function () {\n  function FileSystemCancellableNetworkTask() {\n    _classCallCheck(this, FileSystemCancellableNetworkTask);\n    this._uuid = uuidv4();\n    this.taskWasCanceled = false;\n    this.emitter = new EventEmitter(ExponentFileSystem);\n  }\n  _createClass(FileSystemCancellableNetworkTask, [{\n    key: \"cancelAsync\",\n    value: function () {\n      var _cancelAsync = _asyncToGenerator(function* () {\n        if (!ExponentFileSystem.networkTaskCancelAsync) {\n          throw new UnavailabilityError('expo-file-system', 'networkTaskCancelAsync');\n        }\n        this.removeSubscription();\n        this.taskWasCanceled = true;\n        return yield ExponentFileSystem.networkTaskCancelAsync(this.uuid);\n      });\n      function cancelAsync() {\n        return _cancelAsync.apply(this, arguments);\n      }\n      return cancelAsync;\n    }()\n  }, {\n    key: \"isTaskCancelled\",\n    value: function isTaskCancelled() {\n      if (this.taskWasCanceled) {\n        console.warn('This task was already canceled.');\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"uuid\",\n    get: function get() {\n      return this._uuid;\n    }\n  }, {\n    key: \"addSubscription\",\n    value: function addSubscription() {\n      var _this = this;\n      if (this.subscription) {\n        return;\n      }\n      this.subscription = this.emitter.addListener(this.getEventName(), function (event) {\n        if (event.uuid === _this.uuid) {\n          var callback = _this.getCallback();\n          if (callback) {\n            callback(event.data);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription() {\n      if (!this.subscription) {\n        return;\n      }\n      this.emitter.removeSubscription(this.subscription);\n      this.subscription = null;\n    }\n  }]);\n  return FileSystemCancellableNetworkTask;\n}();\nexport var UploadTask = function (_FileSystemCancellabl) {\n  _inherits(UploadTask, _FileSystemCancellabl);\n  var _super = _createSuper(UploadTask);\n  function UploadTask(url, fileUri, options, callback) {\n    var _options$httpMethod;\n    var _this2;\n    _classCallCheck(this, UploadTask);\n    _this2 = _super.call(this);\n    _this2.url = url;\n    _this2.fileUri = fileUri;\n    _this2.callback = callback;\n    var httpMethod = (options == null ? void 0 : (_options$httpMethod = options.httpMethod) == null ? void 0 : _options$httpMethod.toUpperCase()) || 'POST';\n    _this2.options = _objectSpread(_objectSpread({\n      sessionType: FileSystemSessionType.BACKGROUND,\n      uploadType: FileSystemUploadType.BINARY_CONTENT\n    }, options), {}, {\n      httpMethod: httpMethod\n    });\n    return _this2;\n  }\n  _createClass(UploadTask, [{\n    key: \"getEventName\",\n    value: function getEventName() {\n      return 'expo-file-system.uploadProgress';\n    }\n  }, {\n    key: \"getCallback\",\n    value: function getCallback() {\n      return this.callback;\n    }\n  }, {\n    key: \"uploadAsync\",\n    value: function () {\n      var _uploadAsync2 = _asyncToGenerator(function* () {\n        if (!ExponentFileSystem.uploadTaskStartAsync) {\n          throw new UnavailabilityError('expo-file-system', 'uploadTaskStartAsync');\n        }\n        if (this.isTaskCancelled()) {\n          return;\n        }\n        this.addSubscription();\n        var result = yield ExponentFileSystem.uploadTaskStartAsync(this.url, this.fileUri, this.uuid, this.options);\n        this.removeSubscription();\n        return result;\n      });\n      function uploadAsync() {\n        return _uploadAsync2.apply(this, arguments);\n      }\n      return uploadAsync;\n    }()\n  }]);\n  return UploadTask;\n}(FileSystemCancellableNetworkTask);\nexport var DownloadResumable = function (_FileSystemCancellabl2) {\n  _inherits(DownloadResumable, _FileSystemCancellabl2);\n  var _super2 = _createSuper(DownloadResumable);\n  function DownloadResumable(url, _fileUri) {\n    var _this3;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = arguments.length > 3 ? arguments[3] : undefined;\n    var resumeData = arguments.length > 4 ? arguments[4] : undefined;\n    _classCallCheck(this, DownloadResumable);\n    _this3 = _super2.call(this);\n    _this3.url = url;\n    _this3._fileUri = _fileUri;\n    _this3.options = options;\n    _this3.callback = callback;\n    _this3.resumeData = resumeData;\n    return _this3;\n  }\n  _createClass(DownloadResumable, [{\n    key: \"fileUri\",\n    get: function get() {\n      return this._fileUri;\n    }\n  }, {\n    key: \"getEventName\",\n    value: function getEventName() {\n      return 'expo-file-system.downloadProgress';\n    }\n  }, {\n    key: \"getCallback\",\n    value: function getCallback() {\n      return this.callback;\n    }\n  }, {\n    key: \"downloadAsync\",\n    value: function () {\n      var _downloadAsync2 = _asyncToGenerator(function* () {\n        if (!ExponentFileSystem.downloadResumableStartAsync) {\n          throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n        }\n        if (this.isTaskCancelled()) {\n          return;\n        }\n        this.addSubscription();\n        return yield ExponentFileSystem.downloadResumableStartAsync(this.url, this._fileUri, this.uuid, this.options, this.resumeData);\n      });\n      function downloadAsync() {\n        return _downloadAsync2.apply(this, arguments);\n      }\n      return downloadAsync;\n    }()\n  }, {\n    key: \"pauseAsync\",\n    value: function () {\n      var _pauseAsync = _asyncToGenerator(function* () {\n        if (!ExponentFileSystem.downloadResumablePauseAsync) {\n          throw new UnavailabilityError('expo-file-system', 'downloadResumablePauseAsync');\n        }\n        if (this.isTaskCancelled()) {\n          return {\n            fileUri: this._fileUri,\n            options: this.options,\n            url: this.url\n          };\n        }\n        var pauseResult = yield ExponentFileSystem.downloadResumablePauseAsync(this.uuid);\n        this.removeSubscription();\n        if (pauseResult) {\n          this.resumeData = pauseResult.resumeData;\n          return this.savable();\n        } else {\n          throw new Error('Unable to generate a savable pause state');\n        }\n      });\n      function pauseAsync() {\n        return _pauseAsync.apply(this, arguments);\n      }\n      return pauseAsync;\n    }()\n  }, {\n    key: \"resumeAsync\",\n    value: function () {\n      var _resumeAsync = _asyncToGenerator(function* () {\n        if (!ExponentFileSystem.downloadResumableStartAsync) {\n          throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n        }\n        if (this.isTaskCancelled()) {\n          return;\n        }\n        this.addSubscription();\n        return yield ExponentFileSystem.downloadResumableStartAsync(this.url, this.fileUri, this.uuid, this.options, this.resumeData);\n      });\n      function resumeAsync() {\n        return _resumeAsync.apply(this, arguments);\n      }\n      return resumeAsync;\n    }()\n  }, {\n    key: \"savable\",\n    value: function savable() {\n      return {\n        url: this.url,\n        fileUri: this.fileUri,\n        options: this.options,\n        resumeData: this.resumeData\n      };\n    }\n  }]);\n  return DownloadResumable;\n}(FileSystemCancellableNetworkTask);\nvar baseReadAsStringAsync = readAsStringAsync;\nvar baseWriteAsStringAsync = writeAsStringAsync;\nvar baseDeleteAsync = deleteAsync;\nvar baseMoveAsync = moveAsync;\nvar baseCopyAsync = copyAsync;\nexport var StorageAccessFramework;\n(function (StorageAccessFramework) {\n  function getUriForDirectoryInRoot(folderName) {\n    return \"content://com.android.externalstorage.documents/tree/primary:\" + folderName + \"/document/primary:\" + folderName;\n  }\n  StorageAccessFramework.getUriForDirectoryInRoot = getUriForDirectoryInRoot;\n  function requestDirectoryPermissionsAsync() {\n    return _requestDirectoryPermissionsAsync.apply(this, arguments);\n  }\n  function _requestDirectoryPermissionsAsync() {\n    _requestDirectoryPermissionsAsync = _asyncToGenerator(function* () {\n      var initialFileUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!ExponentFileSystem.requestDirectoryPermissionsAsync) {\n        throw new UnavailabilityError('expo-file-system', 'StorageAccessFramework.requestDirectoryPermissionsAsync');\n      }\n      return yield ExponentFileSystem.requestDirectoryPermissionsAsync(initialFileUrl);\n    });\n    return _requestDirectoryPermissionsAsync.apply(this, arguments);\n  }\n  StorageAccessFramework.requestDirectoryPermissionsAsync = requestDirectoryPermissionsAsync;\n  function readDirectoryAsync(_x16) {\n    return _readDirectoryAsync2.apply(this, arguments);\n  }\n  function _readDirectoryAsync2() {\n    _readDirectoryAsync2 = _asyncToGenerator(function* (dirUri) {\n      if (!ExponentFileSystem.readSAFDirectoryAsync) {\n        throw new UnavailabilityError('expo-file-system', 'StorageAccessFramework.readDirectoryAsync');\n      }\n      return yield ExponentFileSystem.readSAFDirectoryAsync(dirUri, {});\n    });\n    return _readDirectoryAsync2.apply(this, arguments);\n  }\n  StorageAccessFramework.readDirectoryAsync = readDirectoryAsync;\n  function makeDirectoryAsync(_x17, _x18) {\n    return _makeDirectoryAsync2.apply(this, arguments);\n  }\n  function _makeDirectoryAsync2() {\n    _makeDirectoryAsync2 = _asyncToGenerator(function* (parentUri, dirName) {\n      if (!ExponentFileSystem.makeSAFDirectoryAsync) {\n        throw new UnavailabilityError('expo-file-system', 'StorageAccessFramework.makeDirectoryAsync');\n      }\n      return yield ExponentFileSystem.makeSAFDirectoryAsync(parentUri, dirName);\n    });\n    return _makeDirectoryAsync2.apply(this, arguments);\n  }\n  StorageAccessFramework.makeDirectoryAsync = makeDirectoryAsync;\n  function createFileAsync(_x19, _x20, _x21) {\n    return _createFileAsync.apply(this, arguments);\n  }\n  function _createFileAsync() {\n    _createFileAsync = _asyncToGenerator(function* (parentUri, fileName, mimeType) {\n      if (!ExponentFileSystem.createSAFFileAsync) {\n        throw new UnavailabilityError('expo-file-system', 'StorageAccessFramework.createFileAsync');\n      }\n      return yield ExponentFileSystem.createSAFFileAsync(parentUri, fileName, mimeType);\n    });\n    return _createFileAsync.apply(this, arguments);\n  }\n  StorageAccessFramework.createFileAsync = createFileAsync;\n  StorageAccessFramework.writeAsStringAsync = baseWriteAsStringAsync;\n  StorageAccessFramework.readAsStringAsync = baseReadAsStringAsync;\n  StorageAccessFramework.deleteAsync = baseDeleteAsync;\n  StorageAccessFramework.moveAsync = baseMoveAsync;\n  StorageAccessFramework.copyAsync = baseCopyAsync;\n})(StorageAccessFramework || (StorageAccessFramework = {}));","map":{"version":3,"names":["EventEmitter","UnavailabilityError","Platform","v4","uuidv4","ExponentFileSystem","EncodingType","FileSystemSessionType","FileSystemUploadType","console","warn","_unused","normalizeEndingSlash","p","replace","documentDirectory","cacheDirectory","bundledAssets","bundleDirectory","getInfoAsync","_x","_getInfoAsync","apply","arguments","_asyncToGenerator","fileUri","options","length","undefined","readAsStringAsync","_x2","_x3","_readAsStringAsync","getContentUriAsync","_x4","_getContentUriAsync","OS","Promise","resolve","reject","writeAsStringAsync","_x5","_x6","_writeAsStringAsync","contents","deleteAsync","_x7","_deleteAsync","deleteLegacyDocumentDirectoryAndroid","_deleteLegacyDocumentDirectoryAndroid","legacyDocumentDirectory","idempotent","moveAsync","_x8","_moveAsync","copyAsync","_x9","_copyAsync","makeDirectoryAsync","_x10","_makeDirectoryAsync","readDirectoryAsync","_x11","_readDirectoryAsync","getFreeDiskStorageAsync","_getFreeDiskStorageAsync","getTotalDiskCapacityAsync","_getTotalDiskCapacityAsync","downloadAsync","_x12","_x13","_downloadAsync","uri","_objectSpread","sessionType","BACKGROUND","uploadAsync","_x14","_x15","_uploadAsync","url","uploadType","BINARY_CONTENT","httpMethod","toUpperCase","createDownloadResumable","callback","resumeData","DownloadResumable","createUploadTask","UploadTask","FileSystemCancellableNetworkTask","_classCallCheck","_uuid","taskWasCanceled","emitter","_createClass","key","value","_cancelAsync","networkTaskCancelAsync","removeSubscription","uuid","cancelAsync","isTaskCancelled","get","addSubscription","_this","subscription","addListener","getEventName","event","getCallback","data","_FileSystemCancellabl","_inherits","_super","_createSuper","_options$httpMethod","_this2","call","_uploadAsync2","uploadTaskStartAsync","result","_FileSystemCancellabl2","_super2","_fileUri","_this3","_downloadAsync2","downloadResumableStartAsync","_pauseAsync","downloadResumablePauseAsync","pauseResult","savable","Error","pauseAsync","_resumeAsync","resumeAsync","baseReadAsStringAsync","baseWriteAsStringAsync","baseDeleteAsync","baseMoveAsync","baseCopyAsync","StorageAccessFramework","getUriForDirectoryInRoot","folderName","requestDirectoryPermissionsAsync","_requestDirectoryPermissionsAsync","initialFileUrl","_x16","_readDirectoryAsync2","dirUri","readSAFDirectoryAsync","_x17","_x18","_makeDirectoryAsync2","parentUri","dirName","makeSAFDirectoryAsync","createFileAsync","_x19","_x20","_x21","_createFileAsync","fileName","mimeType","createSAFFileAsync"],"sources":["/Users/shubh/Documents/attendance_app/node_modules/expo-file-system/src/FileSystem.ts"],"sourcesContent":["import { EventEmitter, Subscription, UnavailabilityError } from 'expo-modules-core';\nimport { Platform } from 'react-native';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ExponentFileSystem from './ExponentFileSystem';\nimport {\n  DownloadOptions,\n  DownloadPauseState,\n  DownloadProgressCallback,\n  FileSystemNetworkTaskProgressCallback,\n  DownloadProgressData,\n  UploadProgressData,\n  DownloadResult,\n  EncodingType,\n  FileInfo,\n  FileSystemAcceptedUploadHttpMethod,\n  FileSystemDownloadResult,\n  FileSystemRequestDirectoryPermissionsResult,\n  FileSystemSessionType,\n  FileSystemUploadOptions,\n  FileSystemUploadResult,\n  FileSystemUploadType,\n  ProgressEvent,\n  ReadingOptions,\n  WritingOptions,\n} from './FileSystem.types';\n\nif (!ExponentFileSystem) {\n  console.warn(\n    \"No native ExponentFileSystem module found, are you sure the expo-file-system's module is linked properly?\"\n  );\n}\n// Prevent webpack from pruning this.\nconst _unused = new EventEmitter(ExponentFileSystem); // eslint-disable-line\n\nexport {\n  DownloadOptions,\n  DownloadPauseState,\n  DownloadProgressCallback,\n  DownloadProgressData,\n  DownloadResult,\n  EncodingType,\n  FileInfo,\n  FileSystemDownloadResult,\n  FileSystemRequestDirectoryPermissionsResult,\n  FileSystemAcceptedUploadHttpMethod,\n  FileSystemSessionType,\n  FileSystemUploadOptions,\n  FileSystemUploadResult,\n  FileSystemUploadType,\n  FileSystemNetworkTaskProgressCallback,\n  ReadingOptions,\n  WritingOptions,\n};\n\nfunction normalizeEndingSlash(p: string | null): string | null {\n  if (p != null) {\n    return p.replace(/\\/*$/, '') + '/';\n  }\n  return null;\n}\n\nexport const documentDirectory = normalizeEndingSlash(ExponentFileSystem.documentDirectory);\nexport const cacheDirectory = normalizeEndingSlash(ExponentFileSystem.cacheDirectory);\n\nexport const { bundledAssets, bundleDirectory } = ExponentFileSystem;\n\nexport async function getInfoAsync(\n  fileUri: string,\n  options: { md5?: boolean; size?: boolean } = {}\n): Promise<FileInfo> {\n  if (!ExponentFileSystem.getInfoAsync) {\n    throw new UnavailabilityError('expo-file-system', 'getInfoAsync');\n  }\n  return await ExponentFileSystem.getInfoAsync(fileUri, options);\n}\n\nexport async function readAsStringAsync(\n  fileUri: string,\n  options?: ReadingOptions\n): Promise<string> {\n  if (!ExponentFileSystem.readAsStringAsync) {\n    throw new UnavailabilityError('expo-file-system', 'readAsStringAsync');\n  }\n  return await ExponentFileSystem.readAsStringAsync(fileUri, options || {});\n}\n\nexport async function getContentUriAsync(fileUri: string): Promise<string> {\n  if (Platform.OS === 'android') {\n    if (!ExponentFileSystem.getContentUriAsync) {\n      throw new UnavailabilityError('expo-file-system', 'getContentUriAsync');\n    }\n    return await ExponentFileSystem.getContentUriAsync(fileUri);\n  } else {\n    return new Promise(function (resolve, reject) {\n      resolve(fileUri);\n    });\n  }\n}\n\nexport async function writeAsStringAsync(\n  fileUri: string,\n  contents: string,\n  options: WritingOptions = {}\n): Promise<void> {\n  if (!ExponentFileSystem.writeAsStringAsync) {\n    throw new UnavailabilityError('expo-file-system', 'writeAsStringAsync');\n  }\n  return await ExponentFileSystem.writeAsStringAsync(fileUri, contents, options);\n}\n\nexport async function deleteAsync(\n  fileUri: string,\n  options: { idempotent?: boolean } = {}\n): Promise<void> {\n  if (!ExponentFileSystem.deleteAsync) {\n    throw new UnavailabilityError('expo-file-system', 'deleteAsync');\n  }\n  return await ExponentFileSystem.deleteAsync(fileUri, options);\n}\n\nexport async function deleteLegacyDocumentDirectoryAndroid(): Promise<void> {\n  if (Platform.OS !== 'android' || documentDirectory == null) {\n    return;\n  }\n  const legacyDocumentDirectory = `${documentDirectory}ExperienceData/`;\n  return await deleteAsync(legacyDocumentDirectory, { idempotent: true });\n}\n\nexport async function moveAsync(options: { from: string; to: string }): Promise<void> {\n  if (!ExponentFileSystem.moveAsync) {\n    throw new UnavailabilityError('expo-file-system', 'moveAsync');\n  }\n  return await ExponentFileSystem.moveAsync(options);\n}\n\nexport async function copyAsync(options: { from: string; to: string }): Promise<void> {\n  if (!ExponentFileSystem.copyAsync) {\n    throw new UnavailabilityError('expo-file-system', 'copyAsync');\n  }\n  return await ExponentFileSystem.copyAsync(options);\n}\n\nexport async function makeDirectoryAsync(\n  fileUri: string,\n  options: { intermediates?: boolean } = {}\n): Promise<void> {\n  if (!ExponentFileSystem.makeDirectoryAsync) {\n    throw new UnavailabilityError('expo-file-system', 'makeDirectoryAsync');\n  }\n  return await ExponentFileSystem.makeDirectoryAsync(fileUri, options);\n}\n\nexport async function readDirectoryAsync(fileUri: string): Promise<string[]> {\n  if (!ExponentFileSystem.readDirectoryAsync) {\n    throw new UnavailabilityError('expo-file-system', 'readDirectoryAsync');\n  }\n  return await ExponentFileSystem.readDirectoryAsync(fileUri, {});\n}\n\nexport async function getFreeDiskStorageAsync(): Promise<number> {\n  if (!ExponentFileSystem.getFreeDiskStorageAsync) {\n    throw new UnavailabilityError('expo-file-system', 'getFreeDiskStorageAsync');\n  }\n  return await ExponentFileSystem.getFreeDiskStorageAsync();\n}\n\nexport async function getTotalDiskCapacityAsync(): Promise<number> {\n  if (!ExponentFileSystem.getTotalDiskCapacityAsync) {\n    throw new UnavailabilityError('expo-file-system', 'getTotalDiskCapacityAsync');\n  }\n  return await ExponentFileSystem.getTotalDiskCapacityAsync();\n}\n\nexport async function downloadAsync(\n  uri: string,\n  fileUri: string,\n  options: DownloadOptions = {}\n): Promise<FileSystemDownloadResult> {\n  if (!ExponentFileSystem.downloadAsync) {\n    throw new UnavailabilityError('expo-file-system', 'downloadAsync');\n  }\n\n  return await ExponentFileSystem.downloadAsync(uri, fileUri, {\n    sessionType: FileSystemSessionType.BACKGROUND,\n    ...options,\n  });\n}\n\nexport async function uploadAsync(\n  url: string,\n  fileUri: string,\n  options: FileSystemUploadOptions = {}\n): Promise<FileSystemUploadResult> {\n  if (!ExponentFileSystem.uploadAsync) {\n    throw new UnavailabilityError('expo-file-system', 'uploadAsync');\n  }\n\n  return await ExponentFileSystem.uploadAsync(url, fileUri, {\n    sessionType: FileSystemSessionType.BACKGROUND,\n    uploadType: FileSystemUploadType.BINARY_CONTENT,\n    ...options,\n    httpMethod: (options.httpMethod || 'POST').toUpperCase(),\n  });\n}\n\nexport function createDownloadResumable(\n  uri: string,\n  fileUri: string,\n  options?: DownloadOptions,\n  callback?: FileSystemNetworkTaskProgressCallback<DownloadProgressData>,\n  resumeData?: string\n): DownloadResumable {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\n\nexport function createUploadTask(\n  url: string,\n  fileUri: string,\n  options?: FileSystemUploadOptions,\n  callback?: FileSystemNetworkTaskProgressCallback<UploadProgressData>\n): UploadTask {\n  return new UploadTask(url, fileUri, options, callback);\n}\n\nexport abstract class FileSystemCancellableNetworkTask<\n  T extends DownloadProgressData | UploadProgressData\n> {\n  private _uuid = uuidv4();\n  protected taskWasCanceled = false;\n  private emitter = new EventEmitter(ExponentFileSystem);\n  private subscription?: Subscription | null;\n\n  public async cancelAsync(): Promise<void> {\n    if (!ExponentFileSystem.networkTaskCancelAsync) {\n      throw new UnavailabilityError('expo-file-system', 'networkTaskCancelAsync');\n    }\n\n    this.removeSubscription();\n    this.taskWasCanceled = true;\n    return await ExponentFileSystem.networkTaskCancelAsync(this.uuid);\n  }\n\n  protected isTaskCancelled(): boolean {\n    if (this.taskWasCanceled) {\n      console.warn('This task was already canceled.');\n      return true;\n    }\n\n    return false;\n  }\n\n  protected get uuid(): string {\n    return this._uuid;\n  }\n\n  protected abstract getEventName(): string;\n\n  protected abstract getCallback(): FileSystemNetworkTaskProgressCallback<T> | undefined;\n\n  protected addSubscription() {\n    if (this.subscription) {\n      return;\n    }\n\n    this.subscription = this.emitter.addListener(this.getEventName(), (event: ProgressEvent<T>) => {\n      if (event.uuid === this.uuid) {\n        const callback = this.getCallback();\n        if (callback) {\n          callback(event.data);\n        }\n      }\n    });\n  }\n\n  protected removeSubscription() {\n    if (!this.subscription) {\n      return;\n    }\n    this.emitter.removeSubscription(this.subscription);\n    this.subscription = null;\n  }\n}\n\nexport class UploadTask extends FileSystemCancellableNetworkTask<UploadProgressData> {\n  private options: FileSystemUploadOptions;\n\n  constructor(\n    private url: string,\n    private fileUri: string,\n    options?: FileSystemUploadOptions,\n    private callback?: FileSystemNetworkTaskProgressCallback<UploadProgressData>\n  ) {\n    super();\n\n    const httpMethod = (options?.httpMethod?.toUpperCase() ||\n      'POST') as FileSystemAcceptedUploadHttpMethod;\n\n    this.options = {\n      sessionType: FileSystemSessionType.BACKGROUND,\n      uploadType: FileSystemUploadType.BINARY_CONTENT,\n      ...options,\n      httpMethod,\n    };\n  }\n\n  protected getEventName(): string {\n    return 'expo-file-system.uploadProgress';\n  }\n  protected getCallback(): FileSystemNetworkTaskProgressCallback<UploadProgressData> | undefined {\n    return this.callback;\n  }\n\n  public async uploadAsync(): Promise<FileSystemUploadResult | undefined> {\n    if (!ExponentFileSystem.uploadTaskStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'uploadTaskStartAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return;\n    }\n\n    this.addSubscription();\n    const result = await ExponentFileSystem.uploadTaskStartAsync(\n      this.url,\n      this.fileUri,\n      this.uuid,\n      this.options\n    );\n    this.removeSubscription();\n\n    return result;\n  }\n}\n\nexport class DownloadResumable extends FileSystemCancellableNetworkTask<DownloadProgressData> {\n  constructor(\n    private url: string,\n    private _fileUri: string,\n    private options: DownloadOptions = {},\n    private callback?: FileSystemNetworkTaskProgressCallback<DownloadProgressData>,\n    private resumeData?: string\n  ) {\n    super();\n  }\n\n  public get fileUri(): string {\n    return this._fileUri;\n  }\n\n  protected getEventName(): string {\n    return 'expo-file-system.downloadProgress';\n  }\n\n  protected getCallback(): FileSystemNetworkTaskProgressCallback<DownloadProgressData> | undefined {\n    return this.callback;\n  }\n\n  async downloadAsync(): Promise<FileSystemDownloadResult | undefined> {\n    if (!ExponentFileSystem.downloadResumableStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return;\n    }\n\n    this.addSubscription();\n    return await ExponentFileSystem.downloadResumableStartAsync(\n      this.url,\n      this._fileUri,\n      this.uuid,\n      this.options,\n      this.resumeData\n    );\n  }\n\n  async pauseAsync(): Promise<DownloadPauseState> {\n    if (!ExponentFileSystem.downloadResumablePauseAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumablePauseAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return {\n        fileUri: this._fileUri,\n        options: this.options,\n        url: this.url,\n      };\n    }\n\n    const pauseResult = await ExponentFileSystem.downloadResumablePauseAsync(this.uuid);\n    this.removeSubscription();\n    if (pauseResult) {\n      this.resumeData = pauseResult.resumeData;\n      return this.savable();\n    } else {\n      throw new Error('Unable to generate a savable pause state');\n    }\n  }\n\n  async resumeAsync(): Promise<FileSystemDownloadResult | undefined> {\n    if (!ExponentFileSystem.downloadResumableStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return;\n    }\n\n    this.addSubscription();\n    return await ExponentFileSystem.downloadResumableStartAsync(\n      this.url,\n      this.fileUri,\n      this.uuid,\n      this.options,\n      this.resumeData\n    );\n  }\n\n  savable(): DownloadPauseState {\n    return {\n      url: this.url,\n      fileUri: this.fileUri,\n      options: this.options,\n      resumeData: this.resumeData,\n    };\n  }\n}\n\nconst baseReadAsStringAsync = readAsStringAsync;\nconst baseWriteAsStringAsync = writeAsStringAsync;\nconst baseDeleteAsync = deleteAsync;\nconst baseMoveAsync = moveAsync;\nconst baseCopyAsync = copyAsync;\n/**\n * Android only\n */\nexport namespace StorageAccessFramework {\n  export function getUriForDirectoryInRoot(folderName: string) {\n    return `content://com.android.externalstorage.documents/tree/primary:${folderName}/document/primary:${folderName}`;\n  }\n\n  export async function requestDirectoryPermissionsAsync(\n    initialFileUrl: string | null = null\n  ): Promise<FileSystemRequestDirectoryPermissionsResult> {\n    if (!ExponentFileSystem.requestDirectoryPermissionsAsync) {\n      throw new UnavailabilityError(\n        'expo-file-system',\n        'StorageAccessFramework.requestDirectoryPermissionsAsync'\n      );\n    }\n\n    return await ExponentFileSystem.requestDirectoryPermissionsAsync(initialFileUrl);\n  }\n\n  export async function readDirectoryAsync(dirUri: string): Promise<string[]> {\n    if (!ExponentFileSystem.readSAFDirectoryAsync) {\n      throw new UnavailabilityError(\n        'expo-file-system',\n        'StorageAccessFramework.readDirectoryAsync'\n      );\n    }\n    return await ExponentFileSystem.readSAFDirectoryAsync(dirUri, {});\n  }\n\n  export async function makeDirectoryAsync(parentUri: string, dirName: string): Promise<string> {\n    if (!ExponentFileSystem.makeSAFDirectoryAsync) {\n      throw new UnavailabilityError(\n        'expo-file-system',\n        'StorageAccessFramework.makeDirectoryAsync'\n      );\n    }\n    return await ExponentFileSystem.makeSAFDirectoryAsync(parentUri, dirName);\n  }\n\n  export async function createFileAsync(\n    parentUri: string,\n    fileName: string,\n    mimeType: string\n  ): Promise<string> {\n    if (!ExponentFileSystem.createSAFFileAsync) {\n      throw new UnavailabilityError('expo-file-system', 'StorageAccessFramework.createFileAsync');\n    }\n    return await ExponentFileSystem.createSAFFileAsync(parentUri, fileName, mimeType);\n  }\n\n  export const writeAsStringAsync = baseWriteAsStringAsync;\n  export const readAsStringAsync = baseReadAsStringAsync;\n  export const deleteAsync = baseDeleteAsync;\n  export const moveAsync = baseMoveAsync;\n  export const copyAsync = baseCopyAsync;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}